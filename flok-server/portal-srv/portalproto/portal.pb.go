// Code generated by protoc-gen-go. DO NOT EDIT.
// source: portal.proto

package portalproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Portal struct {
	// @inject_tag: bson:"_id"
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	StudentID            string   `protobuf:"bytes,2,opt,name=studentID,proto3" json:"studentID,omitempty"`
	PiID                 string   `protobuf:"bytes,3,opt,name=piID,proto3" json:"piID,omitempty"`
	IsPIApproved         bool     `protobuf:"varint,4,opt,name=isPIApproved,proto3" json:"isPIApproved,omitempty"`
	IsSecApproved        bool     `protobuf:"varint,5,opt,name=isSecApproved,proto3" json:"isSecApproved,omitempty"`
	IsDORApproved        bool     `protobuf:"varint,6,opt,name=isDORApproved,proto3" json:"isDORApproved,omitempty"`
	RejectionComment     string   `protobuf:"bytes,7,opt,name=rejectionComment,proto3" json:"rejectionComment,omitempty"`
	IsFreeze             bool     `protobuf:"varint,8,opt,name=isFreeze,proto3" json:"isFreeze,omitempty"`
	IsSubmitted          bool     `protobuf:"varint,9,opt,name=isSubmitted,proto3" json:"isSubmitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Portal) Reset()         { *m = Portal{} }
func (m *Portal) String() string { return proto.CompactTextString(m) }
func (*Portal) ProtoMessage()    {}
func (*Portal) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{0}
}
func (m *Portal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Portal.Unmarshal(m, b)
}
func (m *Portal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Portal.Marshal(b, m, deterministic)
}
func (dst *Portal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Portal.Merge(dst, src)
}
func (m *Portal) XXX_Size() int {
	return xxx_messageInfo_Portal.Size(m)
}
func (m *Portal) XXX_DiscardUnknown() {
	xxx_messageInfo_Portal.DiscardUnknown(m)
}

var xxx_messageInfo_Portal proto.InternalMessageInfo

func (m *Portal) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Portal) GetStudentID() string {
	if m != nil {
		return m.StudentID
	}
	return ""
}

func (m *Portal) GetPiID() string {
	if m != nil {
		return m.PiID
	}
	return ""
}

func (m *Portal) GetIsPIApproved() bool {
	if m != nil {
		return m.IsPIApproved
	}
	return false
}

func (m *Portal) GetIsSecApproved() bool {
	if m != nil {
		return m.IsSecApproved
	}
	return false
}

func (m *Portal) GetIsDORApproved() bool {
	if m != nil {
		return m.IsDORApproved
	}
	return false
}

func (m *Portal) GetRejectionComment() string {
	if m != nil {
		return m.RejectionComment
	}
	return ""
}

func (m *Portal) GetIsFreeze() bool {
	if m != nil {
		return m.IsFreeze
	}
	return false
}

func (m *Portal) GetIsSubmitted() bool {
	if m != nil {
		return m.IsSubmitted
	}
	return false
}

type CreateRequest struct {
	PiID                 string   `protobuf:"bytes,1,opt,name=piID,proto3" json:"piID,omitempty"`
	StudentID            string   `protobuf:"bytes,2,opt,name=studentID,proto3" json:"studentID,omitempty"`
	IsFreeze             bool     `protobuf:"varint,3,opt,name=isFreeze,proto3" json:"isFreeze,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{1}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(dst, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetPiID() string {
	if m != nil {
		return m.PiID
	}
	return ""
}

func (m *CreateRequest) GetStudentID() string {
	if m != nil {
		return m.StudentID
	}
	return ""
}

func (m *CreateRequest) GetIsFreeze() bool {
	if m != nil {
		return m.IsFreeze
	}
	return false
}

type CreateResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{2}
}
func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (dst *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(dst, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ViewRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	PortalID             string   `protobuf:"bytes,2,opt,name=portalID,proto3" json:"portalID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewRequest) Reset()         { *m = ViewRequest{} }
func (m *ViewRequest) String() string { return proto.CompactTextString(m) }
func (*ViewRequest) ProtoMessage()    {}
func (*ViewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{3}
}
func (m *ViewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewRequest.Unmarshal(m, b)
}
func (m *ViewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewRequest.Marshal(b, m, deterministic)
}
func (dst *ViewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewRequest.Merge(dst, src)
}
func (m *ViewRequest) XXX_Size() int {
	return xxx_messageInfo_ViewRequest.Size(m)
}
func (m *ViewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ViewRequest proto.InternalMessageInfo

func (m *ViewRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ViewRequest) GetPortalID() string {
	if m != nil {
		return m.PortalID
	}
	return ""
}

type ViewResponse struct {
	Portal               *Portal  `protobuf:"bytes,1,opt,name=portal,proto3" json:"portal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewResponse) Reset()         { *m = ViewResponse{} }
func (m *ViewResponse) String() string { return proto.CompactTextString(m) }
func (*ViewResponse) ProtoMessage()    {}
func (*ViewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{4}
}
func (m *ViewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewResponse.Unmarshal(m, b)
}
func (m *ViewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewResponse.Marshal(b, m, deterministic)
}
func (dst *ViewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewResponse.Merge(dst, src)
}
func (m *ViewResponse) XXX_Size() int {
	return xxx_messageInfo_ViewResponse.Size(m)
}
func (m *ViewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ViewResponse proto.InternalMessageInfo

func (m *ViewResponse) GetPortal() *Portal {
	if m != nil {
		return m.Portal
	}
	return nil
}

type FreezeRequest struct {
	SecID                string   `protobuf:"bytes,1,opt,name=secID,proto3" json:"secID,omitempty"`
	PortalID             string   `protobuf:"bytes,2,opt,name=portalID,proto3" json:"portalID,omitempty"`
	IsFreeze             bool     `protobuf:"varint,3,opt,name=isFreeze,proto3" json:"isFreeze,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeRequest) Reset()         { *m = FreezeRequest{} }
func (m *FreezeRequest) String() string { return proto.CompactTextString(m) }
func (*FreezeRequest) ProtoMessage()    {}
func (*FreezeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{5}
}
func (m *FreezeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeRequest.Unmarshal(m, b)
}
func (m *FreezeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeRequest.Marshal(b, m, deterministic)
}
func (dst *FreezeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeRequest.Merge(dst, src)
}
func (m *FreezeRequest) XXX_Size() int {
	return xxx_messageInfo_FreezeRequest.Size(m)
}
func (m *FreezeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeRequest proto.InternalMessageInfo

func (m *FreezeRequest) GetSecID() string {
	if m != nil {
		return m.SecID
	}
	return ""
}

func (m *FreezeRequest) GetPortalID() string {
	if m != nil {
		return m.PortalID
	}
	return ""
}

func (m *FreezeRequest) GetIsFreeze() bool {
	if m != nil {
		return m.IsFreeze
	}
	return false
}

type FreezeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeResponse) Reset()         { *m = FreezeResponse{} }
func (m *FreezeResponse) String() string { return proto.CompactTextString(m) }
func (*FreezeResponse) ProtoMessage()    {}
func (*FreezeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{6}
}
func (m *FreezeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeResponse.Unmarshal(m, b)
}
func (m *FreezeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeResponse.Marshal(b, m, deterministic)
}
func (dst *FreezeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeResponse.Merge(dst, src)
}
func (m *FreezeResponse) XXX_Size() int {
	return xxx_messageInfo_FreezeResponse.Size(m)
}
func (m *FreezeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeResponse proto.InternalMessageInfo

type SetApproveRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	PortalID             string   `protobuf:"bytes,2,opt,name=portalID,proto3" json:"portalID,omitempty"`
	IsApproved           bool     `protobuf:"varint,3,opt,name=isApproved,proto3" json:"isApproved,omitempty"`
	RejectionComment     string   `protobuf:"bytes,4,opt,name=rejectionComment,proto3" json:"rejectionComment,omitempty"`
	Level                int32    `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetApproveRequest) Reset()         { *m = SetApproveRequest{} }
func (m *SetApproveRequest) String() string { return proto.CompactTextString(m) }
func (*SetApproveRequest) ProtoMessage()    {}
func (*SetApproveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{7}
}
func (m *SetApproveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetApproveRequest.Unmarshal(m, b)
}
func (m *SetApproveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetApproveRequest.Marshal(b, m, deterministic)
}
func (dst *SetApproveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetApproveRequest.Merge(dst, src)
}
func (m *SetApproveRequest) XXX_Size() int {
	return xxx_messageInfo_SetApproveRequest.Size(m)
}
func (m *SetApproveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetApproveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetApproveRequest proto.InternalMessageInfo

func (m *SetApproveRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *SetApproveRequest) GetPortalID() string {
	if m != nil {
		return m.PortalID
	}
	return ""
}

func (m *SetApproveRequest) GetIsApproved() bool {
	if m != nil {
		return m.IsApproved
	}
	return false
}

func (m *SetApproveRequest) GetRejectionComment() string {
	if m != nil {
		return m.RejectionComment
	}
	return ""
}

func (m *SetApproveRequest) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type SetApproveResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetApproveResponse) Reset()         { *m = SetApproveResponse{} }
func (m *SetApproveResponse) String() string { return proto.CompactTextString(m) }
func (*SetApproveResponse) ProtoMessage()    {}
func (*SetApproveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{8}
}
func (m *SetApproveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetApproveResponse.Unmarshal(m, b)
}
func (m *SetApproveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetApproveResponse.Marshal(b, m, deterministic)
}
func (dst *SetApproveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetApproveResponse.Merge(dst, src)
}
func (m *SetApproveResponse) XXX_Size() int {
	return xxx_messageInfo_SetApproveResponse.Size(m)
}
func (m *SetApproveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetApproveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetApproveResponse proto.InternalMessageInfo

func (m *SetApproveResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type SetSubmittedRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	IsSubmitted          bool     `protobuf:"varint,3,opt,name=isSubmitted,proto3" json:"isSubmitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetSubmittedRequest) Reset()         { *m = SetSubmittedRequest{} }
func (m *SetSubmittedRequest) String() string { return proto.CompactTextString(m) }
func (*SetSubmittedRequest) ProtoMessage()    {}
func (*SetSubmittedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{9}
}
func (m *SetSubmittedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSubmittedRequest.Unmarshal(m, b)
}
func (m *SetSubmittedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSubmittedRequest.Marshal(b, m, deterministic)
}
func (dst *SetSubmittedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSubmittedRequest.Merge(dst, src)
}
func (m *SetSubmittedRequest) XXX_Size() int {
	return xxx_messageInfo_SetSubmittedRequest.Size(m)
}
func (m *SetSubmittedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSubmittedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetSubmittedRequest proto.InternalMessageInfo

func (m *SetSubmittedRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetSubmittedRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SetSubmittedRequest) GetIsSubmitted() bool {
	if m != nil {
		return m.IsSubmitted
	}
	return false
}

type SetSubmittedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetSubmittedResponse) Reset()         { *m = SetSubmittedResponse{} }
func (m *SetSubmittedResponse) String() string { return proto.CompactTextString(m) }
func (*SetSubmittedResponse) ProtoMessage()    {}
func (*SetSubmittedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_portal_811f0d411ab87fbd, []int{10}
}
func (m *SetSubmittedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSubmittedResponse.Unmarshal(m, b)
}
func (m *SetSubmittedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSubmittedResponse.Marshal(b, m, deterministic)
}
func (dst *SetSubmittedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSubmittedResponse.Merge(dst, src)
}
func (m *SetSubmittedResponse) XXX_Size() int {
	return xxx_messageInfo_SetSubmittedResponse.Size(m)
}
func (m *SetSubmittedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSubmittedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetSubmittedResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Portal)(nil), "portalproto.Portal")
	proto.RegisterType((*CreateRequest)(nil), "portalproto.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "portalproto.CreateResponse")
	proto.RegisterType((*ViewRequest)(nil), "portalproto.ViewRequest")
	proto.RegisterType((*ViewResponse)(nil), "portalproto.ViewResponse")
	proto.RegisterType((*FreezeRequest)(nil), "portalproto.FreezeRequest")
	proto.RegisterType((*FreezeResponse)(nil), "portalproto.FreezeResponse")
	proto.RegisterType((*SetApproveRequest)(nil), "portalproto.SetApproveRequest")
	proto.RegisterType((*SetApproveResponse)(nil), "portalproto.SetApproveResponse")
	proto.RegisterType((*SetSubmittedRequest)(nil), "portalproto.SetSubmittedRequest")
	proto.RegisterType((*SetSubmittedResponse)(nil), "portalproto.SetSubmittedResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PortalServiceClient is the client API for PortalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortalServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	View(ctx context.Context, in *ViewRequest, opts ...grpc.CallOption) (*ViewResponse, error)
	Freeze(ctx context.Context, in *FreezeRequest, opts ...grpc.CallOption) (*FreezeResponse, error)
	SetApprove(ctx context.Context, in *SetApproveRequest, opts ...grpc.CallOption) (*SetApproveResponse, error)
	SetSubmitted(ctx context.Context, in *SetSubmittedRequest, opts ...grpc.CallOption) (*SetSubmittedResponse, error)
}

type portalServiceClient struct {
	cc *grpc.ClientConn
}

func NewPortalServiceClient(cc *grpc.ClientConn) PortalServiceClient {
	return &portalServiceClient{cc}
}

func (c *portalServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/portalproto.PortalService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalServiceClient) View(ctx context.Context, in *ViewRequest, opts ...grpc.CallOption) (*ViewResponse, error) {
	out := new(ViewResponse)
	err := c.cc.Invoke(ctx, "/portalproto.PortalService/View", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalServiceClient) Freeze(ctx context.Context, in *FreezeRequest, opts ...grpc.CallOption) (*FreezeResponse, error) {
	out := new(FreezeResponse)
	err := c.cc.Invoke(ctx, "/portalproto.PortalService/Freeze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalServiceClient) SetApprove(ctx context.Context, in *SetApproveRequest, opts ...grpc.CallOption) (*SetApproveResponse, error) {
	out := new(SetApproveResponse)
	err := c.cc.Invoke(ctx, "/portalproto.PortalService/SetApprove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalServiceClient) SetSubmitted(ctx context.Context, in *SetSubmittedRequest, opts ...grpc.CallOption) (*SetSubmittedResponse, error) {
	out := new(SetSubmittedResponse)
	err := c.cc.Invoke(ctx, "/portalproto.PortalService/SetSubmitted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortalServiceServer is the server API for PortalService service.
type PortalServiceServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	View(context.Context, *ViewRequest) (*ViewResponse, error)
	Freeze(context.Context, *FreezeRequest) (*FreezeResponse, error)
	SetApprove(context.Context, *SetApproveRequest) (*SetApproveResponse, error)
	SetSubmitted(context.Context, *SetSubmittedRequest) (*SetSubmittedResponse, error)
}

func RegisterPortalServiceServer(s *grpc.Server, srv PortalServiceServer) {
	s.RegisterService(&_PortalService_serviceDesc, srv)
}

func _PortalService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portalproto.PortalService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalService_View_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalServiceServer).View(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portalproto.PortalService/View",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalServiceServer).View(ctx, req.(*ViewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalService_Freeze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FreezeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalServiceServer).Freeze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portalproto.PortalService/Freeze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalServiceServer).Freeze(ctx, req.(*FreezeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalService_SetApprove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetApproveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalServiceServer).SetApprove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portalproto.PortalService/SetApprove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalServiceServer).SetApprove(ctx, req.(*SetApproveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalService_SetSubmitted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSubmittedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalServiceServer).SetSubmitted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portalproto.PortalService/SetSubmitted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalServiceServer).SetSubmitted(ctx, req.(*SetSubmittedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "portalproto.PortalService",
	HandlerType: (*PortalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PortalService_Create_Handler,
		},
		{
			MethodName: "View",
			Handler:    _PortalService_View_Handler,
		},
		{
			MethodName: "Freeze",
			Handler:    _PortalService_Freeze_Handler,
		},
		{
			MethodName: "SetApprove",
			Handler:    _PortalService_SetApprove_Handler,
		},
		{
			MethodName: "SetSubmitted",
			Handler:    _PortalService_SetSubmitted_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "portal.proto",
}

func init() { proto.RegisterFile("portal.proto", fileDescriptor_portal_811f0d411ab87fbd) }

var fileDescriptor_portal_811f0d411ab87fbd = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x13, 0xc7, 0x4d, 0x27, 0x1f, 0x2a, 0xd3, 0xa8, 0x32, 0x06, 0x15, 0x63, 0x71, 0xa8,
	0x40, 0xca, 0xa1, 0x1c, 0x11, 0x87, 0x92, 0x08, 0x29, 0xa7, 0x56, 0xb6, 0xe0, 0x00, 0xe2, 0xd0,
	0xda, 0x73, 0x58, 0x94, 0xc4, 0xc6, 0xbb, 0x0e, 0x12, 0x27, 0x7e, 0x0c, 0x17, 0xfe, 0x25, 0xca,
	0xae, 0xbd, 0xdd, 0x75, 0xd2, 0x5c, 0x38, 0xc5, 0x6f, 0xe6, 0x79, 0xe6, 0xcd, 0xcc, 0x73, 0x60,
	0x58, 0xe4, 0xa5, 0xb8, 0x5b, 0x4e, 0x8b, 0x32, 0x17, 0x39, 0x0e, 0x14, 0x92, 0x20, 0xfa, 0xd3,
	0x01, 0xef, 0x56, 0x62, 0x1c, 0x43, 0x87, 0x65, 0xbe, 0x13, 0x3a, 0x97, 0x27, 0x71, 0x87, 0x65,
	0xf8, 0x1c, 0x4e, 0xb8, 0xa8, 0x32, 0x5a, 0x8b, 0xc5, 0xdc, 0xef, 0xc8, 0xf0, 0x43, 0x00, 0x11,
	0xdc, 0x82, 0x2d, 0xe6, 0x7e, 0x57, 0x26, 0xe4, 0x33, 0x46, 0x30, 0x64, 0xfc, 0x76, 0x71, 0x5d,
	0x14, 0x65, 0xbe, 0xa1, 0xcc, 0x77, 0x43, 0xe7, 0xb2, 0x1f, 0x5b, 0x31, 0x7c, 0x05, 0x23, 0xc6,
	0x13, 0x4a, 0x35, 0xa9, 0x27, 0x49, 0x76, 0x50, 0xb1, 0xe6, 0x37, 0xb1, 0x66, 0x79, 0x0d, 0xcb,
	0x08, 0xe2, 0x6b, 0x38, 0x2d, 0xe9, 0x3b, 0xa5, 0x82, 0xe5, 0xeb, 0x59, 0xbe, 0x5a, 0xd1, 0x5a,
	0xf8, 0xc7, 0x52, 0xcf, 0x4e, 0x1c, 0x03, 0xe8, 0x33, 0xfe, 0xb1, 0x24, 0xfa, 0x45, 0x7e, 0x5f,
	0x16, 0xd3, 0x18, 0x43, 0x18, 0x30, 0x9e, 0x54, 0xf7, 0x2b, 0x26, 0x04, 0x65, 0xfe, 0x89, 0x4c,
	0x9b, 0xa1, 0xe8, 0x1b, 0x8c, 0x66, 0x25, 0xdd, 0x09, 0x8a, 0xe9, 0x47, 0x45, 0x5c, 0xe8, 0xf1,
	0x1d, 0x63, 0xfc, 0xc3, 0x0b, 0x33, 0x05, 0x74, 0x6d, 0x01, 0x51, 0x08, 0xe3, 0xa6, 0x3c, 0x2f,
	0xf2, 0x35, 0xa7, 0xf6, 0x31, 0xa2, 0x6b, 0x18, 0x7c, 0x66, 0xf4, 0xb3, 0x69, 0x7f, 0x0e, 0x5e,
	0xc5, 0xa9, 0xd4, 0x02, 0x6a, 0xb4, 0x6d, 0xa2, 0xae, 0xab, 0x15, 0x68, 0x1c, 0xbd, 0x83, 0xa1,
	0x2a, 0x51, 0xb7, 0x78, 0x03, 0x9e, 0xca, 0xc9, 0x1a, 0x83, 0xab, 0xb3, 0xa9, 0x61, 0x8c, 0xa9,
	0x32, 0x45, 0x5c, 0x53, 0xb6, 0x0b, 0x50, 0x5a, 0x1b, 0x05, 0x13, 0xe8, 0x71, 0x4a, 0xb5, 0x00,
	0x05, 0x0e, 0xf5, 0x3f, 0xb8, 0x80, 0x53, 0x18, 0x37, 0xe5, 0x95, 0xba, 0xe8, 0xaf, 0x03, 0x4f,
	0x12, 0x12, 0xf5, 0xad, 0xff, 0x63, 0x6e, 0xbc, 0x00, 0x60, 0x5c, 0x1b, 0x49, 0x75, 0x36, 0x22,
	0x7b, 0x5d, 0xe4, 0x3e, 0xe2, 0xa2, 0x09, 0xf4, 0x96, 0xb4, 0xa1, 0xa5, 0x74, 0x6d, 0x2f, 0x56,
	0x20, 0x9a, 0x02, 0x9a, 0x52, 0xeb, 0xfd, 0xfa, 0x70, 0xcc, 0xab, 0x34, 0x25, 0xce, 0xa5, 0xd8,
	0x7e, 0xdc, 0xc0, 0xe8, 0x2b, 0x9c, 0x25, 0x24, 0xb4, 0xbb, 0x9a, 0xe1, 0xda, 0x1f, 0x20, 0x82,
	0xbb, 0x1d, 0xaf, 0x1e, 0x48, 0x3e, 0xb7, 0xad, 0xda, 0xdd, 0xb5, 0xea, 0x39, 0x4c, 0xec, 0xe2,
	0x4a, 0xce, 0xd5, 0xef, 0x2e, 0x8c, 0xd4, 0x51, 0x13, 0x2a, 0x37, 0x2c, 0x25, 0x9c, 0x81, 0xa7,
	0x5c, 0x87, 0x81, 0x75, 0x7a, 0xcb, 0xe9, 0xc1, 0xb3, 0xbd, 0xb9, 0xfa, 0x4a, 0x47, 0xf8, 0x1e,
	0xdc, 0xad, 0xab, 0xd0, 0xb7, 0x68, 0x86, 0x57, 0x83, 0xa7, 0x7b, 0x32, 0xfa, 0xf5, 0x19, 0x78,
	0xf5, 0x47, 0x68, 0x6b, 0xb0, 0xcc, 0xd6, 0xd2, 0xd0, 0x72, 0xca, 0x11, 0xde, 0x00, 0x3c, 0xec,
	0x1f, 0x2f, 0x2c, 0xf2, 0x8e, 0x87, 0x82, 0x17, 0x8f, 0xe6, 0x75, 0xc1, 0x4f, 0x30, 0x34, 0x77,
	0x88, 0x61, 0xfb, 0x95, 0xf6, 0xed, 0x82, 0x97, 0x07, 0x18, 0x4d, 0xd9, 0x0f, 0xa3, 0x2f, 0xe6,
	0x7f, 0xef, 0xbd, 0x27, 0x7f, 0xde, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x32, 0xb2, 0xfa, 0x5f,
	0x9f, 0x05, 0x00, 0x00,
}
