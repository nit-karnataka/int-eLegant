// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chatproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Chat struct {
	// @inject_tag: bson:"_id"
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	Comments             []*Comment `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	PermittedUsers       []string   `protobuf:"bytes,3,rep,name=permittedUsers,proto3" json:"permittedUsers,omitempty"`
	IsFreeze             bool       `protobuf:"varint,4,opt,name=isFreeze,proto3" json:"isFreeze,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Chat) Reset()         { *m = Chat{} }
func (m *Chat) String() string { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()    {}
func (*Chat) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{0}
}
func (m *Chat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chat.Unmarshal(m, b)
}
func (m *Chat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chat.Marshal(b, m, deterministic)
}
func (dst *Chat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chat.Merge(dst, src)
}
func (m *Chat) XXX_Size() int {
	return xxx_messageInfo_Chat.Size(m)
}
func (m *Chat) XXX_DiscardUnknown() {
	xxx_messageInfo_Chat.DiscardUnknown(m)
}

var xxx_messageInfo_Chat proto.InternalMessageInfo

func (m *Chat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Chat) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *Chat) GetPermittedUsers() []string {
	if m != nil {
		return m.PermittedUsers
	}
	return nil
}

func (m *Chat) GetIsFreeze() bool {
	if m != nil {
		return m.IsFreeze
	}
	return false
}

type Comment struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{1}
}
func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (dst *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(dst, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreateRequest struct {
	Owner                []string `protobuf:"bytes,1,rep,name=owner,proto3" json:"owner,omitempty"`
	IsFreeze             bool     `protobuf:"varint,2,opt,name=isFreeze,proto3" json:"isFreeze,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{2}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(dst, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetOwner() []string {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *CreateRequest) GetIsFreeze() bool {
	if m != nil {
		return m.IsFreeze
	}
	return false
}

type CreateResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{3}
}
func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (dst *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(dst, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type InsertCommentRequest struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ChatID               string   `protobuf:"bytes,3,opt,name=chatID,proto3" json:"chatID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertCommentRequest) Reset()         { *m = InsertCommentRequest{} }
func (m *InsertCommentRequest) String() string { return proto.CompactTextString(m) }
func (*InsertCommentRequest) ProtoMessage()    {}
func (*InsertCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{4}
}
func (m *InsertCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertCommentRequest.Unmarshal(m, b)
}
func (m *InsertCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertCommentRequest.Marshal(b, m, deterministic)
}
func (dst *InsertCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertCommentRequest.Merge(dst, src)
}
func (m *InsertCommentRequest) XXX_Size() int {
	return xxx_messageInfo_InsertCommentRequest.Size(m)
}
func (m *InsertCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertCommentRequest proto.InternalMessageInfo

func (m *InsertCommentRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *InsertCommentRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *InsertCommentRequest) GetChatID() string {
	if m != nil {
		return m.ChatID
	}
	return ""
}

type InsertCommentResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertCommentResponse) Reset()         { *m = InsertCommentResponse{} }
func (m *InsertCommentResponse) String() string { return proto.CompactTextString(m) }
func (*InsertCommentResponse) ProtoMessage()    {}
func (*InsertCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{5}
}
func (m *InsertCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertCommentResponse.Unmarshal(m, b)
}
func (m *InsertCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertCommentResponse.Marshal(b, m, deterministic)
}
func (dst *InsertCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertCommentResponse.Merge(dst, src)
}
func (m *InsertCommentResponse) XXX_Size() int {
	return xxx_messageInfo_InsertCommentResponse.Size(m)
}
func (m *InsertCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertCommentResponse proto.InternalMessageInfo

func (m *InsertCommentResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ViewRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ChatID               string   `protobuf:"bytes,2,opt,name=chatID,proto3" json:"chatID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewRequest) Reset()         { *m = ViewRequest{} }
func (m *ViewRequest) String() string { return proto.CompactTextString(m) }
func (*ViewRequest) ProtoMessage()    {}
func (*ViewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{6}
}
func (m *ViewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewRequest.Unmarshal(m, b)
}
func (m *ViewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewRequest.Marshal(b, m, deterministic)
}
func (dst *ViewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewRequest.Merge(dst, src)
}
func (m *ViewRequest) XXX_Size() int {
	return xxx_messageInfo_ViewRequest.Size(m)
}
func (m *ViewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ViewRequest proto.InternalMessageInfo

func (m *ViewRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ViewRequest) GetChatID() string {
	if m != nil {
		return m.ChatID
	}
	return ""
}

type ViewResponse struct {
	Chat                 *Chat    `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewResponse) Reset()         { *m = ViewResponse{} }
func (m *ViewResponse) String() string { return proto.CompactTextString(m) }
func (*ViewResponse) ProtoMessage()    {}
func (*ViewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{7}
}
func (m *ViewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewResponse.Unmarshal(m, b)
}
func (m *ViewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewResponse.Marshal(b, m, deterministic)
}
func (dst *ViewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewResponse.Merge(dst, src)
}
func (m *ViewResponse) XXX_Size() int {
	return xxx_messageInfo_ViewResponse.Size(m)
}
func (m *ViewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ViewResponse proto.InternalMessageInfo

func (m *ViewResponse) GetChat() *Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

type FreezeRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ChatID               string   `protobuf:"bytes,2,opt,name=chatID,proto3" json:"chatID,omitempty"`
	IsFreeze             bool     `protobuf:"varint,3,opt,name=isFreeze,proto3" json:"isFreeze,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeRequest) Reset()         { *m = FreezeRequest{} }
func (m *FreezeRequest) String() string { return proto.CompactTextString(m) }
func (*FreezeRequest) ProtoMessage()    {}
func (*FreezeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{8}
}
func (m *FreezeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeRequest.Unmarshal(m, b)
}
func (m *FreezeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeRequest.Marshal(b, m, deterministic)
}
func (dst *FreezeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeRequest.Merge(dst, src)
}
func (m *FreezeRequest) XXX_Size() int {
	return xxx_messageInfo_FreezeRequest.Size(m)
}
func (m *FreezeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeRequest proto.InternalMessageInfo

func (m *FreezeRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *FreezeRequest) GetChatID() string {
	if m != nil {
		return m.ChatID
	}
	return ""
}

func (m *FreezeRequest) GetIsFreeze() bool {
	if m != nil {
		return m.IsFreeze
	}
	return false
}

type FreezeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeResponse) Reset()         { *m = FreezeResponse{} }
func (m *FreezeResponse) String() string { return proto.CompactTextString(m) }
func (*FreezeResponse) ProtoMessage()    {}
func (*FreezeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_44c89d537c83c478, []int{9}
}
func (m *FreezeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeResponse.Unmarshal(m, b)
}
func (m *FreezeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeResponse.Marshal(b, m, deterministic)
}
func (dst *FreezeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeResponse.Merge(dst, src)
}
func (m *FreezeResponse) XXX_Size() int {
	return xxx_messageInfo_FreezeResponse.Size(m)
}
func (m *FreezeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Chat)(nil), "chatproto.Chat")
	proto.RegisterType((*Comment)(nil), "chatproto.Comment")
	proto.RegisterType((*CreateRequest)(nil), "chatproto.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "chatproto.CreateResponse")
	proto.RegisterType((*InsertCommentRequest)(nil), "chatproto.InsertCommentRequest")
	proto.RegisterType((*InsertCommentResponse)(nil), "chatproto.InsertCommentResponse")
	proto.RegisterType((*ViewRequest)(nil), "chatproto.ViewRequest")
	proto.RegisterType((*ViewResponse)(nil), "chatproto.ViewResponse")
	proto.RegisterType((*FreezeRequest)(nil), "chatproto.FreezeRequest")
	proto.RegisterType((*FreezeResponse)(nil), "chatproto.FreezeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	InsertComment(ctx context.Context, in *InsertCommentRequest, opts ...grpc.CallOption) (*InsertCommentResponse, error)
	View(ctx context.Context, in *ViewRequest, opts ...grpc.CallOption) (*ViewResponse, error)
	Freeze(ctx context.Context, in *FreezeRequest, opts ...grpc.CallOption) (*FreezeResponse, error)
}

type chatServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceClient(cc *grpc.ClientConn) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/chatproto.ChatService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) InsertComment(ctx context.Context, in *InsertCommentRequest, opts ...grpc.CallOption) (*InsertCommentResponse, error) {
	out := new(InsertCommentResponse)
	err := c.cc.Invoke(ctx, "/chatproto.ChatService/InsertComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) View(ctx context.Context, in *ViewRequest, opts ...grpc.CallOption) (*ViewResponse, error) {
	out := new(ViewResponse)
	err := c.cc.Invoke(ctx, "/chatproto.ChatService/View", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Freeze(ctx context.Context, in *FreezeRequest, opts ...grpc.CallOption) (*FreezeResponse, error) {
	out := new(FreezeResponse)
	err := c.cc.Invoke(ctx, "/chatproto.ChatService/Freeze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	InsertComment(context.Context, *InsertCommentRequest) (*InsertCommentResponse, error)
	View(context.Context, *ViewRequest) (*ViewResponse, error)
	Freeze(context.Context, *FreezeRequest) (*FreezeResponse, error)
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatproto.ChatService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_InsertComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).InsertComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatproto.ChatService/InsertComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).InsertComment(ctx, req.(*InsertCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_View_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).View(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatproto.ChatService/View",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).View(ctx, req.(*ViewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Freeze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FreezeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Freeze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatproto.ChatService/Freeze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Freeze(ctx, req.(*FreezeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatproto.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ChatService_Create_Handler,
		},
		{
			MethodName: "InsertComment",
			Handler:    _ChatService_InsertComment_Handler,
		},
		{
			MethodName: "View",
			Handler:    _ChatService_View_Handler,
		},
		{
			MethodName: "Freeze",
			Handler:    _ChatService_Freeze_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_chat_44c89d537c83c478) }

var fileDescriptor_chat_44c89d537c83c478 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4d, 0xab, 0xd3, 0x40,
	0x14, 0x7d, 0xf9, 0x30, 0x4d, 0x6f, 0x6c, 0x94, 0xe1, 0x59, 0xc7, 0x6c, 0x0c, 0x23, 0x48, 0x56,
	0x01, 0xfb, 0x56, 0x6f, 0x21, 0x45, 0x5b, 0x84, 0x6e, 0xe3, 0xc7, 0x42, 0x41, 0x88, 0xe9, 0x85,
	0x66, 0xd1, 0xa4, 0xce, 0x4c, 0x2d, 0xf8, 0x13, 0xfc, 0x15, 0xfe, 0x54, 0x49, 0x26, 0x49, 0x67,
	0xd2, 0x0a, 0xe2, 0xaa, 0xb9, 0x73, 0xef, 0x3d, 0xe7, 0xdc, 0x73, 0x28, 0x40, 0xb1, 0xcb, 0x65,
	0x7a, 0xe0, 0xb5, 0xac, 0xc9, 0xb4, 0xf9, 0x6e, 0x3f, 0xd9, 0x2f, 0x0b, 0xdc, 0xd5, 0x2e, 0x97,
	0x24, 0x04, 0xbb, 0xdc, 0x52, 0x2b, 0xb6, 0x92, 0x69, 0x66, 0x97, 0x5b, 0x92, 0x82, 0x5f, 0xd4,
	0xfb, 0x3d, 0x56, 0x52, 0x50, 0x3b, 0x76, 0x92, 0x60, 0x41, 0xd2, 0x61, 0x2d, 0x5d, 0xa9, 0x56,
	0x36, 0xcc, 0x90, 0x97, 0x10, 0x1e, 0x90, 0xef, 0x4b, 0x29, 0x71, 0xfb, 0x51, 0x20, 0x17, 0xd4,
	0x89, 0x9d, 0x64, 0x9a, 0x8d, 0x5e, 0x49, 0x04, 0x7e, 0x29, 0xde, 0x71, 0xc4, 0x9f, 0x48, 0xdd,
	0xd8, 0x4a, 0xfc, 0x6c, 0xa8, 0xd9, 0x3d, 0x4c, 0x3a, 0x60, 0x72, 0x0b, 0x0f, 0xea, 0x53, 0x85,
	0xbc, 0x53, 0xa4, 0x0a, 0x42, 0x61, 0x52, 0xd4, 0x95, 0xc4, 0x4a, 0x52, 0xbb, 0x7d, 0xef, 0x4b,
	0xf6, 0x06, 0x66, 0x2b, 0x8e, 0xb9, 0xc4, 0x0c, 0xbf, 0x1f, 0x51, 0x18, 0x00, 0xce, 0x19, 0x40,
	0x67, 0xb7, 0x47, 0xec, 0x31, 0x84, 0x3d, 0x84, 0x38, 0xd4, 0x95, 0xc0, 0xb1, 0x27, 0xec, 0x2b,
	0xdc, 0x6e, 0x2a, 0x81, 0x5c, 0xf6, 0xe7, 0x5f, 0x72, 0xfd, 0x8b, 0x58, 0x32, 0x07, 0xaf, 0xb1,
	0x72, 0xb3, 0xa6, 0x4e, 0xdb, 0xe8, 0x2a, 0xf6, 0x0a, 0x9e, 0x8c, 0xf0, 0x3b, 0x21, 0x14, 0x26,
	0xe2, 0x58, 0x14, 0x28, 0x44, 0x4b, 0xe1, 0x67, 0x7d, 0xc9, 0x5e, 0x43, 0xf0, 0xa9, 0xc4, 0x53,
	0xaf, 0x64, 0x0e, 0xde, 0x51, 0x20, 0xdf, 0xac, 0x3b, 0x29, 0x5d, 0xa5, 0x31, 0xda, 0x06, 0xe3,
	0x1d, 0x3c, 0x54, 0xeb, 0x1d, 0xd1, 0x0b, 0x70, 0x9b, 0x4e, 0xbb, 0x1d, 0x2c, 0x1e, 0xe9, 0x89,
	0xef, 0x72, 0x99, 0xb5, 0x4d, 0xf6, 0x05, 0x66, 0xca, 0xb2, 0xff, 0x64, 0x35, 0x52, 0x70, 0x46,
	0x29, 0x3c, 0x86, 0xb0, 0x07, 0x57, 0x9a, 0x16, 0xbf, 0x6d, 0x08, 0x1a, 0xf6, 0xf7, 0xc8, 0x7f,
	0x94, 0x05, 0x92, 0x25, 0x78, 0x2a, 0x27, 0x42, 0x75, 0x7d, 0x7a, 0xfa, 0xd1, 0xb3, 0x2b, 0x1d,
	0x05, 0xc7, 0x6e, 0xc8, 0x07, 0x98, 0x19, 0x36, 0x93, 0xe7, 0xda, 0xf4, 0xb5, 0x80, 0xa3, 0xf8,
	0xef, 0x03, 0x03, 0xea, 0x3d, 0xb8, 0x8d, 0x95, 0x64, 0xae, 0xcd, 0x6a, 0xd1, 0x44, 0x4f, 0x2f,
	0xde, 0x87, 0xd5, 0x25, 0x78, 0xea, 0x66, 0xe3, 0x22, 0xc3, 0x63, 0xe3, 0x22, 0xd3, 0x20, 0x76,
	0xf3, 0x36, 0xf8, 0x7c, 0xfe, 0x4b, 0x7f, 0xf3, 0xda, 0x9f, 0xbb, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x3a, 0x8f, 0xe9, 0x5e, 0xf2, 0x03, 0x00, 0x00,
}
